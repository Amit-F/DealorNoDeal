/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our Samples at https://docs.gradle.org/9.0.0/samples
 * This project uses @Incubating APIs which are subject to change.
 */

// ---- Imports needed for type-safe accessors in Kotlin DSL
import org.gradle.api.tasks.testing.Test
import org.gradle.testing.jacoco.plugins.JacocoPluginExtension
import org.gradle.testing.jacoco.tasks.JacocoReport

plugins {
  // Keep only non-core plugins here; core Java plugins live in subprojects
  id("com.diffplug.spotless") version "6.25.0"
}

allprojects {
  group = "io.github.amitfink"
  version = "2.0.0-SNAPSHOT"

  repositories {
    mavenCentral()
  }

  // Code style (applied to each project)
  apply(plugin = "com.diffplug.spotless")
  spotless {
    java {
      googleJavaFormat().aosp().reflowLongStrings()
    }
  }
}

subprojects {
  // Apply Jacoco to every subproject (core/cli/analytics/legacy)
  apply(plugin = "jacoco")

  // Make all Test tasks use JUnit Platform and finalize with Jacoco report
  tasks.withType<Test>().configureEach {
    useJUnitPlatform()
    // Make sure the jacoco report runs after tests in each subproject
    finalizedBy(tasks.named("jacocoTestReport"))
  }

  // Configure the Jacoco plugin (tool version) for each subproject
  extensions.configure<JacocoPluginExtension> {
    toolVersion = "0.8.12"
  }

  // Configure Jacoco report outputs for each subproject
  tasks.withType<JacocoReport>().configureEach {
    reports {
      xml.required.set(true)
      html.required.set(true)
    }
  }
}

